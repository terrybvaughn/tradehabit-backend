{
  "version": "2025-10-02",
  "global_tool_policy": "Tool usage is REQUIRED for any response that involves user data, counts, aggregates, or examples. Do not rely on memory or unstated assumptions.",
  "on_pattern_missing": "stop_with_message",
  "on_format_missing": "stop_with_message",
  "numeric_provenance_gate": true,
  "when_detectors": [
    {
      "when": "internals_request",
      "match": {
        "any": ["json fields", "json keys", "json values", "show me the json", "field names", "schema", "internal fields", "raw json", "api fields", "data structure", "show me the fields", "list the fields", "show the fields", "show the schema", "show me properties", "fields and values", "fields you use", "fields you used", "properties you used", "from that fixture"]
      },
      "options": {
        "regex": [
          "\\bjson\\s+fields?\\b",
          "\\bjson\\s+keys?\\b",
          "\\bjson\\s+values?\\b",
          "\\bshow\\s+me\\s+the\\s+json\\b",
          "\\bfield\\s+names?\\b",
          "\\bschema\\b",
          "\\binternal\\s+fields?\\b",
          "\\braw\\s+json\\b",
          "\\bapi\\s+fields?\\b",
          "\\bdata\\s+structure\\b",
          "\\bshow\\s+me\\s+the\\s+fields?\\b",
          "\\blist\\s+the\\s+fields?\\b",
          "\\bshow\\s+the\\s+fields?\\b",
          "\\bshow\\s+the\\s+schema\\b",
          "\\bshow\\s+me\\s+properties\\b",
          "\\bfields?\\s+and\\s+values?\\b",
          "\\bfields?\\s+you\\s+use\\b",
          "\\bfields?\\s+you\\s+used\\b",
          "\\bproperties\\s+you\\s+used\\b",
          "\\bfrom\\s+that\\s+fixture\\b"
        ]
      }
    },
    {
      "when": "concept_definition",
      "match": {
        "any": ["what is", "meaning of", "define", "what does", "definition of"]
      },
      "options": {
        "regex": [
          "\\bwhat does\\s+.+\\s+mean\\b",
          "\\bdefinition of\\b"
        ]
      }
    },
    {
      "when": "performance_stats",
      "match": {
        "all": [["any", ["summary","summary","summarize","overview","overall","assess","evaluate","analyze","analysis of"]],
                ["any", ["trades","trading performance","performance","stats","statistics"]]]
      }
    },
    {
      "when": "date_filter_signal",
      "match": {
        "any": [
          "jan","feb","mar","apr","may","jun","jul","aug","sep","sept","oct","nov","dec",
          "yesterday","today","last week","last month","this week","this month",
          "between","from","to","through","range"
        ]
      },
      "options": {
        "regex": [
          "\\b(?:jan|feb|mar|apr|may|jun|jul|aug|sep|sept|oct|nov|dec)[a-z]*\\s+\\d{4}\\b",
          "\\b\\d{4}-\\d{2}\\b",
          "\\b\\d{4}-\\d{2}-\\d{2}\\s*(?:to|â€“|-|through)\\s*\\d{4}-\\d{2}-\\d{2}\\b",
          "\\bbetween\\s+\\d{4}-\\d{2}-\\d{2}\\s+and\\s+\\d{4}-\\d{2}-\\d{2}\\b"
        ]
      }
    },
    
    {
      "when": "trade_examples_or_filtered_counts",
      "match": {
        "all": [["any", ["show","list","display","give me","return","pull","fetch","export","example","examples"]],
                ["any", ["trade","trades","entry","entries","position","positions"]]],
        "not": ["outsized loss"]
      },
      "options": {
        "limit_number_regex": "(?:\\bshow|list|return|give|pull)\\s+(?:me\\s+)?(\\d{1,3})\\b",
        "recent_phrases": ["most recent","latest","newest","desc","descending"],
        "oldest_phrases": ["oldest","earliest","asc","ascending"]
      }
    },
    {
      "when": "losses",
      "match": {
        "all": [["any", ["loss","losses","outsized loss","outsized losses","losing trades","losers","trades that are losers","trades in which I took a loss","unprofitable trades"]],
                ["any", ["list","display","give me","examples","ranked","top","worst","biggest","largest","maximum","max"]]],
        "not": ["what is","meaning of","define","definition of","what does"]
      }
    },
    { 
      "when": "outsized_losses_detection_explanation",
      "match": {
        "all": [["any", ["loss","losses","outsized loss","outsized losses"]],
                ["any", ["list","display","give me","examples","ranked","top","worst","biggest","largest","maximum","max"]]],
        "not": ["what is","meaning of","define","definition of","what does"]
      }
    },
    {
      "when": "loss_consistency_chart",
      "match": {
        "any": ["loss consistency chart", "loss consistency", "loss distribution", "loss dispersion", "loss clustering", "loss pattern", "loss scatter", "loss spread"]
      }
    },
    {
      "when": "mistake_detection_explanation",
      "match": {
        "any": ["how do you detect","how do you determine","how does tradehabit","how do you measure","what rules are used","how do you decide","formula","methodology","algorithm"]
      }
    },
    {
      "when": "session_start",
      "match": {
        "any": ["reset"]
      }
    }
  ],
  "deterministic_tool_selection": [
    {"when": "internals_request", "tool": "none", "notes": "Always respond with the exact INTERNALS_REFUSAL message from system_instructions.md; never mention debug or any workaround."},
    
    {"when": "concept_definition", "tool": "none",
     "notes": "Pure definitions. Use metric_mappings.md (authoritative) and analytics_explanations.md. Do NOT call tools unless the user explicitly asks for their own numbers or examples."},

    {"when": "losses", "tool": "filter_losses", "notes": "Most questions about losses. Lists or ranked losses should come from filter_losses; sort by pointsLost desc; use extrema for singular."},

    {"when": "loss_consistency_chart", "tool": "filter_losses", "notes": "Loss consistency chart analysis requires full loss statistics from filter_losses. Extract loss_statistics.mean_loss, loss_statistics.std_loss, and loss_statistics.outsized_loss_threshold from response. Interpret tight clustering (low std dev relative to mean) vs wide dispersion (high std dev relative to mean) across ALL losing trades, not just flagged outliers."},

    {"when": "outsized_losses_detection_explanation", "tool": "filter_losses", "notes": "Required for outsized-loss explanations, thresholds, examples, or distributions. Calculate mean/std/threshold using ALL losing trades (do not use hasMistake filter for base statistics). If examples requested, then filter to losses exceeding threshold."},

    {"when": "count_mistake_trades", "tool": "filter_trades", "notes": "Deterministic count via list path: hasMistake=true, include_total=true, max_results=0. Do NOT call get_endpoint_data with name='mistakes'."},

    {"when": "date_filter_signal", "tool": "filter_trades", "notes": "If a date/month signal is present in a count question, prefer filter_trades with datetime_range so counts match list results."},

    {"when": "session_start", "tool": "get_summary_data", "notes": "Trigger phrase: reset"},

    {"when": "performance_stats", "tool": "get_summary_data"},

    {"when": "trade_examples_or_filtered_counts", "tool": "filter_trades",
     "notes": "User requests lists/examples like 'show X trades', 'list N most recent', with fields (entry time, risk size, etc.). Supports pagination (offset/limit) and sorting (e.g., time desc)."},

    {"when": "mistake_detection_explanation", "tool": "get_endpoint_data", "category": "auto",
     "notes": "Summary endpoints (flat dicts): insights, stop-loss, excessive-risk, revenge, risk-sizing, winrate-payoff. Fetch once and use results directly. Do not call repeatedly or attempt keys_only/top exploration since these endpoints do not contain arrays. Do not fetch for outsized_losses numbers."},

    {"when": "tie_breaker_winrate_payoff", "tool": "get_endpoint_data", "category": "winrate-payoff"}
  ],
  "counting_rules": {
    "totals": "get_summary_data",
    "category_counts": "endpoint_or_filter",
    "filtered_counts": "filter_trades_or_losses",
    "never_fabricate": true,
    "forbid_summary_data_for_category": true,
    "require_endpoint_numbers_in_output": true
  },
  "filter_trades_usage": {
    "supported_filters": ["mistakes", "time_of_day", "time_range", "datetime_range", "side", "symbol", "riskPoints_min/max", "pointsLost_min/max", "pnl_min/max", "result", "max_results", "offset", "include_total", "sort_by", "sort_dir", "fields"],
    "field_projection": "When user asks for specific fields, return only those fields",
    "id_only_requests": "If asked for 'IDs only' or 'integer only', return exactly that",
    "pagination_guidance": "Apply List-Size Messaging Policy (see response_formats.md). Respect list_defaults (limit, hard_cap). Always pass max_results; offer pagination if has_more=true.",
    "count_only_guidance": "For mistake count questions route to filter_trades with hasMistake=true, include_total=true, max_results=0."
  },
  "time_semantics": {
    "entry_time_unit": "ISO 8601",
    "buckets": {
      "morning": ["05:00","11:59"],
      "afternoon": ["12:00","16:59"],
      "evening": ["17:00","01:59"],
      "overnight": ["02:00","04:59"]
    }
  },
  "discrepancies_policy": {
    "global_totals_source": "get_summary_data",
    "category_metrics_source": "endpoint",
    "missing_key_response": "report_unavailable"
  },
  "categories": [
    {"intent": "Session Reset", "triggers": ["reset"], "pattern": "Default", "format": "Default", "requirements": {"tool_call": "Before responding, call get_summary_data to populate summary_data"}},
    {"intent": "Debug", "triggers": ["debug:"], "pattern": "Default", "format": "Default", "requirements": {"gate": "If user message does not start with 'debug:', respond: 'I cannot share internal system information.'"}},
    {"intent": "Conceptual", "triggers": ["what is", "meaning of", "define"], "pattern": "Conceptual", "format": "Educational"},
    {
      "intent": "Methodology", 
      "triggers": ["how do you determine", "how does tradehabit", "how do you measure", "what factors decide", "what rules are used to", "how do you decide", "how does tradehabit identify", "how does the system decide", "excessive risk multiplier", "outsized loss multiplier", "revenge window multiplier", "risk sizing threshold", "adjust parameter", "tweak threshold"], 
      "pattern": "Analytical", 
      "format": "Parameter", 
      "tool_policy": "auto", 
      "requirements": {
        "formulas": "Must restate formulas exactly from analytics_explanations.md.",
        "algorithms": "Must quote algorithm steps exactly from analytics_explanations.md MISTAKE DETECTION ALGORITHMS section.",
        "source_verification": "Parameter defaults must match exact **Default:** values in analytics_explanations.md. Do not use training data or assumptions.",
        "parameter_calibration": "Explain calibration intent and impact; reference the canonical knob name(s).",
        "tool_call": "Before answering, call get_endpoint_data for the target mistake category. For Outsized Loss content, call filter_losses (losers subset). Do not answer if tool fails or returns empty.",
        "forbid_summary_data_for_category": true
      }
    },
    {"intent": "Contextual", "triggers": ["how is this different", "compare"], "pattern": "Contextual", "format": "Educational"},
    {"intent": "Practical", "triggers": ["how do you spot", "diagnose", "what signs indicate", "how do you identify", "when reviewing history"], "pattern": "Practical", "format": "Analytical", "requirements": {"algorithms": "Must quote algorithm steps exactly from analytics_explanations.md MISTAKE DETECTION ALGORITHMS section when explaining detection processes", "parameter_calibration": "Emphasize parameter calibration importance"}},
    {"intent": "Analytical", "triggers": ["outliers", "formula", "how do you statistically calculate", "what role does variance play"], "pattern": "Analytical", "format": "Educational", "requirements": {"formulas": "Always show formula from analytics_explanations.md", "algorithms": "Quote algorithm steps exactly from analytics_explanations.md MISTAKE DETECTION ALGORITHMS section when relevant", "parameter_calibration": "Emphasize parameter calibration importance"}},
    {"intent": "Assessment", "triggers": ["assess", "evaluate"], "pattern": "Assessment", "format": "Analytical"},
    {"intent": "Goal-Setting", "triggers": ["set a goal", "target"], "pattern": "Goal-Setting", "format": "Goals"},
    {"intent": "Problem-Solution", "triggers": ["how do i fix", "improve"], "pattern": "Problem-Solution", "format": "Analytical"},
    {"intent": "Motivational", "triggers": ["encourage", "progress"], "pattern": "Motivational", "format": "Motivational"},
    {"intent": "Clarification", "triggers": ["unclear", "could you clarify", "what do you mean", "I don't understand"], "pattern": "Default", "format": "Clarification"},
    {"intent": "Conversation Management", "triggers": ["wrap up", "summarize", "next topic", "that's all"], "pattern": "Default", "format": "Conversation Management"},
    {"intent": "Error", "triggers": [], "pattern": "Default", "format": "Errors", "notes": "Use when the assistant must apologise or explain a limitation (out-of-scope, missing data, etc.)."},
    {"intent": "Default", "triggers": [], "pattern": "Default", "format": "Default"}
  ],
  "routing_tie_breaker": "Methodology Priority: when a question could be Methodology or Assessment, classify as Methodology.",
  "filter_trades_keyword_map": {
    "mistakes": {
      "excessive risk": {"mistake.excessive_risk": true},
      "no stop": {"mistake.no_stop_loss": true},
      "no stop-loss": {"mistake.no_stop_loss": true},
      "revenge": {"mistake.revenge": true},
      "risk sizing inconsistent": {"mistake.risk_sizing_inconsistent": true},
      "inconsistent risk sizing": {"mistake.risk_sizing_inconsistent": true}
    },
    "fields": {
      "entry time": "entryTime",
      "timestamp": "entryTime",
      "risk size": "riskPoints",
      "stop distance": "riskPoints",
      "points risked": "riskPoints",
      "symbol": "symbol",
      "instrument": "symbol",
      "side": "side",
      "direction": "side",
      "p&l": "pnl",
      "profit": "pnl",
      "loss": "pnl"
    }
  },
  "list_defaults": {
    "limit": 10,
    "hard_cap": 50,
    "sort_field": "entryTime",
    "sort_direction_for_recent": "desc",
    "sort_direction_for_oldest": "asc"
  }
}
